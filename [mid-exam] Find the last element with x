Viết chương trình tìm kiếm một số trong MẢNG KHÔNG GIẢM với yêu cầu như sau:

INPUT

- Một số nguyên không âm n (không quá mười triệu), là số lượng phần tử của mảng

- n số nguyên không âm  tiếp theo (giá trị mỗi số không quá một tỷ),  đây là các phần tử của mảng

- những số nguyên tiếp theo (giá trị mỗi số không quá một tỷ), đây là các số cần tìm

- cuối cùng là số -1, là dấu hiệu để kết thúc quá trình tìm kiếm.
 

OUPUT

Ứng với mỗi số cần tìm, xuất ra trên một dòng vị trí của số đó trong mảng. Quy ước số đầu tiên của mảng có vị trí là 0 và nếu số cần tìm không có trong mảng xuất ra -1. Nếu số cần tìm xuất hiện ở nhiều vị trí trong mảng, xuất ra vị trí CUỐI CÙNG tìm thấy.

LƯU Ý: CÁC TESTCASE CỦA CÔ ĐÃ CHO SẴN MẢNG KHÔNG GIẢM. SV KHÔNG CẦN KIỂM TRA ĐIỀU KIỆN 




void inputArray(int*& a, int& n)
{
    cin >> n;
    a = new int[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
}
int binarySearch2(int* a, int n, int x)
{
    int l = 0;
    int dem = 0;
    int r = n - 1;
    int mid = (l + r) / 2;
    while (r >= l)
    {
        mid = (l + r) / 2;
        if (a[mid] > x)
        {
            r = mid - 1;           
        }
        else if (a[mid] < x)
        {
            l = mid + 1;            
        }
        else
        {
            for (int i = mid + 1; ; i++)
            {
                if (a[i] != x)
                    return i-1;
               
            }
        }
    }   
    return -1;
}
